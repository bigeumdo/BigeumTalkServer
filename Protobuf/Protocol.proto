syntax = 'proto3';
package Protocol;

enum PacketId
{
	PACKET_ID_NONE = 0;
	PACKET_ID_C_LOGIN = 1;
	PACKET_ID_S_LOGIN = 2;
	PACKET_ID_C_CREATE_ROOM = 3;
	PACKET_ID_S_CREATE_ROOM = 4;
	PACKET_ID_C_ENTER_ROOM = 5;
	PACKET_ID_S_ENTER_ROOM = 6;
	PACKET_ID_C_LEAVE_ROOM = 7;
	PACKET_ID_S_LEAVE_ROOM = 8;
	PACKET_ID_C_ROOM_LIST = 9;
	PACKET_ID_S_ROOM_LIST = 10;
	PACKET_ID_C_CHAT = 11;
	PACKET_ID_S_CHAT = 12;
	PACKET_ID_S_OTHER_ENTER = 13;
	PACKET_ID_S_OTHER_LEAVE = 14;
}

message User 
{
	string nickname = 1;
	uint64 id = 2;
	// TODO: token
}

message Room
{
	uint64 id = 1;
	string roomName = 2;
	string hostName = 3;
	uint32 maxUser = 4;
	uint32 userCount = 5;
}

message C_LOGIN 
{
	User user = 1;
}

message S_LOGIN
{
	bool success = 1;
	uint64 userId = 2;
}

message C_CREATE_ROOM
{
	User user = 1;
	string roomName = 2;
}

message S_CREATE_ROOM
{
	bool success = 1;
	Room room = 2;
}

message C_ENTER_ROOM
{
	User user = 1;
	uint64 roomId = 2;
}

message S_ENTER_ROOM
{
	bool success = 1;
	Room roomData = 2;
	repeated User users = 3;
}

message C_LEAVE_ROOM
{
	User user = 1;
	uint64 roomId = 2;
}

message S_LEAVE_ROOM
{
	bool success = 1;
}

message C_ROOM_LIST
{
	User user = 1;
}

message S_ROOM_LIST
{
	uint32 roomCount = 1;
	repeated Room rooms = 2;
}

message C_CHAT
{
	User user = 1;
	string msg = 2;
}

message S_CHAT
{
	oneof is_server
	{
		bool isServer = 1;
		User user = 2;
	}

	string msg = 3;
	double timestamp = 4;
}

message S_OTHER_ENTER
{
	User user = 1;
	double timestamp = 2;
}

message S_OTHER_LEAVE
{
	User user = 1;
	double timestamp = 2;
}
